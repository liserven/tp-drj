<?php
/**
 * Created by PhpStorm.
 * User: 李沈阳
 * Date: 2018/1/16
 * Time: 15:10
 */

namespace app\admin\controller;

use app\common\model\Classa as ClassaModel;
use app\common\validate\ClassaValidate;
use app\common\validate\IDMustBePositiveInt;
use app\lib\exception\ParameterException;
use custom\CusLog;

/**
 * Class News
 * @package app\admin\controller
 * 资讯控制器
 */
class Classa extends Base
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }


    //列表显示
    public function toList()
    {
        $page = ClassaModel::getPage([], 10);
        $this->assign('page', $page);
        return $this->fetch();
    }


    //添加
    public function doAdd()
    {
        if ($this->request->isPost()) {
            //组合数据
            $data['name']   = input('post.name');
            $data['order']  = input('post.order');
            $data['status'] = input('post.status');
            (new ClassaValidate())->goCheck($data);
            try{
                $result = ClassaModel::create($data);
                return $this->resultHandle($result);
            }catch (\Exception $e)
            {
                return show( false, $e->getMessage() );
            }
        } else {
            return $this->fetch();
        }
    }

    //修改
    public function doEdit()
    {
        if ($this->request->isPost()) {
            $data['name']   = input('post.name');
            $data['order']  = input('post.order');
            $data['status'] = input('post.status');
            $data['id']     = input('post.id');
            (new ClassaValidate())->goCheck($data);
            try{
                $result = ClassaModel::update($data);
                return $this->resultHandle($result);
            }catch (\Exception $e)
            {
                return show( false, $e->getMessage() );
            }
            
        } else {
            (new IDMustBePositiveInt())->goCheck();
            $id = input('id/d');
            $data = ClassaModel::get($id);
            $this->assign('data', $data);
            return $this->fetch();
        }
    }

    //删除
    public function doDel($id)
    {
        (new IDMustBePositiveInt())->goCheck();
        $data = ClassaModel::get(['id' => $id]);
        if (!$data) {
            throw new ParameterException();
        }
        try {
            $result = $data->delete();
            CusLog::writeLog($this->User['am_id'], '删除了 <a class="c-red">' . $data->title . '</a>Banner');
            return $this->resultHandle($result);
        } catch (\Exception $e) {
            return show(false, $e->getMessage());
        }
    }


    //修改状态
    public function editStatus($id, $state)
    {
        (new IDMustBePositiveInt())->goCheck();
        $data = ClassaModel::get(['id' => $id]);
        if (!$data) {
            throw new ParameterException();
        }
        $content = $state == 1 ? '启用了 -' . $data->name . '- 医院类型' : '停用了 - <a class="c-red">' . $data->name . '-</a> 医院类型';
        try {
            $data->status = $state;
            $result = $data->save();
            CusLog::writeLog($this->User['am_id'], $content);
            return $this->resultHandle($result);
        } catch (\Exception $e) {
            return show(false, $e->getMessage());
        }
    }

    //修改排序
    public function editOrder($id, $order)
    {
        (new IDMustBePositiveInt())->goCheck();
        $data = ClassaModel::get(['id' => $id]);
        if (!$data) {
            return show(false, '该Banner已经不存在了...');
        }
        try {
            $data->order = $order;
            $result = $data->save();
            CusLog::writeLog($this->User['am_id'], '修改了 <a class="c-red">' . $data->name . '</a>排序,结果为' . $order);
            return $this->resultHandle($result);
        } catch (\Exception $e) {
            return show(false, $e->getMessage());
        }
    }


    public function doDels($ids = [])
    {
        if (empty($ids)) {
            return show(false, '选中数据为空');
        }
        try {
            $str_ids = implode(',', $ids);
            $result = NewsModel::destroy($str_ids);
            return $this->resultHandle($result);
        } catch (\Exception $e) {
            return show(false, $e->getMessage());
        }
    }


}