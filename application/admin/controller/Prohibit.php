<?php
/**
 * Created by PhpStorm.
 * User: 李沈阳
 * Date: 2018/1/10
 * Time: 9:26
 */

namespace app\admin\controller;


use app\common\model\ProhibitData;
use app\common\model\ProhibitSort;
use app\common\validate\IDMustBePositiveInt;
use app\common\validate\ProhibitValidate;
use app\lib\exception\ParameterException;
use custom\CusLog;
use think\Db;

class Prohibit extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->assign('sortList', ProhibitSort::all());
    }



    public function toList()
    {
        $page = ProhibitData::getProhibitPageList();
        $this->assign('page', $page);
        return $this->fetch();
    }

    /**
     * @return 如果post请求添加操作 如果get请求返回添加页面
     */
    public function doAdd()
    {
        if ($this->request->isPost()) {
            if (!$this->_checkAction()) {
                return $this->ajaxShow(false, '无权此操作');
            }

            $data['g_name'] = input('g_name');
            $data['g_price'] = input('g_price');
            $data['g_price_r'] = input('g_price_r');
            $data['g_class'] = input('g_class');
            $data['g_class_r'] = input('g_class_r');
            $data['g_style'] = input('g_style');
            $data['crate_at'] = input('g_other');
            $data['g_material'] = input('g_material');
            $data['g_size'] = input('g_size');
            $data['g_other'] = input('g_other');
            (new ProhibitValidate() )->goCheck($data);
            try{
                $result = ProhibitData::create($data);
                return $this->resultHandle($result);
            }catch (\Exception $e)
            {
                return show( false, $e->getMessage() );
            }
        } else {
            return $this->fetch();
        }
    }

    /**
     * @return 如果是post请求添加操作，如果get请求返回页面
     */
    public function doEdit()
    {
        if ($this->request->isPost()) {
            if (!$this->_checkAction()) {
                return $this->ajaxShow(false, '无权此操作');
            }
            $data = ProhibitData::get(input('post.id/d'));
            if( !$data )
            {
                throw new ParameterException();
            }
            $data->pd_text = input('post.text');
            $data->pd_status = input('post.status');
            $data->pd_replace = input('post.replace');
            $data->pd_sort_id = input('post.pid');
            try{
                $result = $data->save();
                CusLog::writeLog($this->User['am_id'], '修改了'.$data->pd_text.'敏感词');
                return $this->resultHandle($result);
            }catch (\Exception $e)
            {
                return show( fasle, $e->getMessage() );
            }

        } else {
            (new IDMustBePositiveInt())->goCheck();
            $id = input('id/d');
            $data = ProhibitData::get($id);
            $this->assign('data', $data);
            return $this->fetch();
        }
    }

    /**
     * @param $id   数据ID
     * @param $state 需要修改的状态
     * return booler 返回的成功或者失败的提示信息
     */
    public function editStatus($id, $state)
    {
        $this->checkEditDelStatus();
        $data = ProhibitData::get($id);
        if( !$data )
        {
            throw new ParameterException();
        }
        $data->pd_status = $state;
        $result = $data->save();
        return $this->resultHandle($result);
    }

    public function doDel($id){
        if(!$this->_checkAction()){
            return $this->ajaxShow(false,'无权此操作');
        }
        (new IDMustBePositiveInt())->goCheck();
        $data = ProhibitData::get($id);
        if( !$data ){
            throw new ParameterException();
        }
        Db::startTrans();
        try{
            $result =$data->delete();
            CusLog::writeLog($this->User['am_id'],'删除了 <a style="color:red;"> '.$data->pd_text.' </a>敏感词');
            Db::commit();
            return $this->resultHandle($result);
        }catch (\Exception $e){
            Db::rollback();
            $this->ajaxShow( false,$e->getMessage());
        }
    }

}