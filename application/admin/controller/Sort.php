<?php
/**
 * Created by PhpStorm.
 * User: 李沈阳
 * Date: 2018/1/16
 * Time: 17:04
 */

namespace app\admin\controller;

use app\common\model\BuildingColumn;
use app\common\model\Sort as SortModel;
use app\common\validate\IDMustBePositiveInt;
use app\common\validate\SortValidate;
use app\lib\exception\ParameterException;
use custom\CusLog;

class Sort extends Base
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->assign('sort', SortModel::all([ 'pid'=>0 ])); //获取所有一级分类
    }


    //列表显示
    public function toList()
    {
        $page = SortModel::paginate(10);
        $this->assign( 'page', $page );
        return $this->fetch();
    }


    //添加
    public function doAdd()
    {
        if( $this->request->isPost() )
        {
            $data = input('post.');
            if( SortModel::get([ 'name'=>$data['name'] ]) )
            {
                throw new ParameterException([
                    'msg' => '该分类已经存在',
                ]);
            }
            try{
                $result = SortModel::create($data);
                $logContent = '发布了 <span style="color:red;"> '. $result->name . ' </span> 分类';
                CusLog::writeLog( $this->User['am_id'], $logContent);
                return $this->resultHandle($result);
            }catch (\Exception $e)
            {
                return show( false, $e->getMessage() );
            }
        }else{
            return $this->fetch();
        }
    }

    //修改
    public function doEdit()
    {
        if( $this->request->isPost() )
        {
            $data = input('post.');
            (new SortValidate() )->goCheck($data);
            $find = SortModel::get($data['id']);
            if( !$find )
            {
                throw new ParameterException();
            }
            try{
                $result = SortModel::update($data);
                if($result)
                {
                    CusLog::writeLog($this->User['am_id'], '修改了<span style="color:red"> '.$find->name.'</span>资讯分类');
                }
                return $this->resultHandle($result);
            }catch (\Exception $e){
                return show(false, $e->getMessage() );
            }

        }else{
            (new IDMustBePositiveInt( ) )->goCheck();
            $id = input('id/d');
            $data = SortModel::get($id);
            $this->assign( 'data', $data );
            return $this->fetch();
        }
    }

    //删除
    public function doDel( $id )
    {
        ( new IDMustBePositiveInt() )->goCheck();
        $data = SortModel::get([ 'id'=>$id ]);
        if( !$data )
        {
            throw new ParameterException();
        }
        try{
            $result = $data->delete();
            CusLog::writeLog($this->User['am_id'], '删除了 <a class="c-red">'.$data->name.'</a>Banner');
            return $this->resultHandle($result);
        }catch ( \Exception $e ){
            return show( false, $e->getMessage() );
        }
    }


    //修改状态
    public function editStatus( $id, $state )
    {
        ( new IDMustBePositiveInt() )->goCheck();
        $data = SortModel::get([ 'id'=>$id ]);
        if( !$data )
        {
            throw new ParameterException();
        }
        $content = $state == 1 ? '启用了 -'.$data->title.'- Banner' : '停用了 - <a class="c-red">'.$data->title.'-</a> Banner';
        try{
            $data->status = $state;
            $result = $data->save();
            CusLog::writeLog($this->User['am_id'], $content);
            return $this->resultHandle($result);
        }catch ( \Exception $e ){
            return show( false, $e->getMessage() );
        }
    }

    //修改排序
    public function editOrder( $id , $order )
    {
        ( new IDMustBePositiveInt() )->goCheck();
        $data = SortModel::get([ 'id'=>$id ]);
        if( !$data )
        {
            return show( false, '该Banner已经不存在了...');
        }
        try{
            $data->order = $order;
            $result = $data->save();
            CusLog::writeLog($this->User['am_id'], '修改了 <a class="c-red">'.$data->name.'</a>排序,结果为'.$order);
            return $this->resultHandle($result);
        }catch ( \Exception $e ){
            return show( false, $e->getMessage() );
        }
    }


    public function doDels( $ids=[] )
    {
        if( empty($ids) )
        {
            return show(false, '选中数据为空');
        }
        try{
            $str_ids = implode(',' , $ids );
            $result = BannerModel::destroy($str_ids);
            return $this->resultHandle($result);
        }catch ( \Exception $e ){
            return show( false, $e->getMessage() );
        }
    }

    public function getTwoSort($id)
    {
        $twoSort = SortModel::all([ 'pid'=>$id ]);
        if( empty($twoSort) )
        {
            $data = SortModel::all([ 'id'=>$id ]);
        }
        else{
            $data = $twoSort;
        }
        $this->assign('sort', $data);
        return $this->fetch();
    }


}