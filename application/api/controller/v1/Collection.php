<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/3/15
 * Time: 14:40
 */

namespace app\api\controller\v1;


use app\common\model\BuildingCollection;
use app\common\model\BuildingDetails;
use app\common\model\VillaCollection;
use app\common\model\VillaData;
use app\lib\exception\BuildingException;
use app\lib\exception\VillaException;
use think\exception\ValidateException;

class Collection extends Base
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }


    protected $beforeActionList = [
        'checkLogin'
    ];


    //获取收藏列表建材
    public function getUserBuildingConnection()
    {
        $buildingCollectionList = BuildingCollection::getCollectionListByUid($this->user['ud_id'], input('limit')?input('limit'):10);
        if(empty($buildingCollectionList))
        {
            throw new BuildingException([
                'msg' => '还没有收藏建材'
            ]);
        }
        return show(true, 'ok', $buildingCollectionList);
    }



    //获取别墅收藏列表
    public function getUserVillaCollection()
    {
        $villaCollectionList = VillaCollection::getVillaCollectionByUid($this->user['ud_id']);
        if(empty($villaCollectionList))
        {
            throw new VillaException([
                'msg' => '还没有收藏别墅'
            ]);
        }
        return show(true, 'ok', $villaCollectionList);
    }

    //删除多个建材收藏
    public function delBuildingCollections($ids)
    {
        if( empty($ids))
        {
            throw new BuildingException([
                'msg'=> '无参数'
            ]);
        }
        foreach ( $ids as $id)
        {
            if( !BuildingCollection::get($id))
            {
                throw new BuildingException([ 'msg'=> '正在删除一个不存在的收藏']);
            }
        }
        return $this->resultHandle(BuildingCollection::destroy($ids));

    }
//删除多个别墅收藏
    public function delVillaCollections($ids)
    {
        if( empty($ids))
        {
            throw new BuildingException([
                'msg'=> '无参数'
            ]);
        }
        foreach ( $ids as $id)
        {
            if( !VillaCollection::get($id))
            {
                throw new BuildingException([ 'msg'=> '正在删除一个不存在的收藏']);
            }
        }
        return $this->resultHandle(VillaCollection::destroy($ids));

    }

}