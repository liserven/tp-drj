<?php/** * Created by PhpStorm. * User: Administrator * Date: 2018/3/27 * Time: 14:36 */namespace app\common\service;use app\common\model\GiveRed;use app\common\model\GrabRed;use app\common\model\PacketsGive;use app\lib\exception\PacketsException;use app\lib\exception\ParameterException;class PacketsServer{    protected $packetsSolo; //红包单价    private $packetUserId; //发起人id    private $message; //红包内容    private $packetCount; //红包个数    public function __construct()    {    }    public function launchPacket($userId)    {        $count= input('count');        $solo= input('solo');        $message= input('message');        if( empty($count) || empty($solo))        {            throw new ParameterException([                'msg' => '参数错误',            ]);        }        $this->packetUserId=$userId;        $this->packetCount= $count;        $this->message= $message ? $message: '恭喜发财大吉大利';        $this->packetsSolo= $solo;        /**         * 发起红包逻辑：         * 首先不过设置数量         * 不能超过设置总金额         * 上一个红包没有领取完成下一个无法发起         */        if( $this->packetCount > 10 )        {            throw new ParameterException([                'msg' => '红包总数不能超过10个'            ]);        }        if( $this->packetsSolo > 200000 )        {            throw new ParameterException([                'msg' => '红包金额不能超过20万'            ]);        }        //查询上次红包使用情况        $this->getPacketsByUid();        return $this->addPackets();        //红包领取完成    }    //根据发起人信息查询红包状态    public function getPacketsByUid()    {        $redResult = GiveRed::getGiveRedByUid(['user_id'=>$this->packetUserId]);        if( $redResult['num'] > $redResult['red_totals'])        {            //如果设置的数据比领取的数量多 说明没有领取完成 不能发起红包            throw new PacketsException([                'msg' => '存在未领取完成的红包'            ]);        }        return true;    }    //发起红包    private function addPackets()    {        $packetsData= [            'user_id' => $this->packetUserId,            'total' => $this->packetsSolo * $this->packetCount,            'num' => $this->packetCount,            'solo' => $this->packetsSolo,        ];        $result = GiveRed::create($packetsData);        return $result;    }    /**     * @param $userId 用户标识     * @param $packetsId    红包id     * 领取红包     */    public function receivePacket($userPhone='', $packetsId)    {        if( empty($userPhone) && empty($packetsId) )        {            throw new ParameterException();        }//        if( empty($userPhone))//        {//            $userPhone = $this->user['ud_phone'];//        }        //查询我是否领取过该红包        $isreceivePacket = GiveRed::getGiveRedByUid([ 'gr.id'=>$packetsId, 'grr.phone'=>$userPhone ]);        if( $isreceivePacket )        {            throw new ParameterException([                'msg' => '您已经领取过该红包，不可重复领取'            ]);        }        $packetData = GiveRed::getGiveRedByUid([ 'gr.id'=>$packetsId ]);        if( $packetData['num'] <= $packetData['red_totals'])        {            //如果设置的数据比领取的数量多 说明没有领取完成 不能发起红包            throw new PacketsException([                'msg' => '该红包已经领取完'            ]);        }        $grabData = [            'phone' => $userPhone,            'rid' => $packetsId,            'money' => $packetData['solo'],            'partner_id' => $packetData['user_id'],        ];        return GrabRed::create($grabData);    }    /**     *     * @param $phone 赠送给手机号     * @param $packets  红包id     * @param $userId   赠送人手机号     * 赠送红包     */    public function givePackets($phone, $packetID, $userPhone)    {        if( empty($phone) || empty($packetID) || empty($userPhone) )        {            throw new ParameterException([                'msg' => '参数错误'            ]);        }        $packets = GrabRed::get(['rid'=>$packetID, 'phone'=> $userPhone]);  //获取红包信息        if( !$packets )        {            throw new PacketsException([                'msg' => '您未领取该红包',                'errCode' =>  90007            ]);        }        if($packets['status'] == 2 )        {            throw new PacketsException([                'msg' => '该红包已经使用',                'errCode' =>  90007            ]);        }        $isCheckGive = GrabRed::get([ 'phone'=> $phone, 'rid'=> $packets['rid']]); //查询赠送用户是否领取同一个红包        if( $isCheckGive )        {            throw new PacketsException([                'msg' => '他已经领取过同一个红包了，不可重复领取',                'errCode' => 90010            ]);        }        $packets->phone = $phone;        $giveResult = $packets->save();        if( $giveResult !== false )        {            $giveData = [                'give_phone' => $userPhone,                'receive_phone' => $phone,                'packet_id' => $packetID,                'packet_money' => $packets['money']            ];            PacketsGive::create($giveData); //赠送信息        }        return $giveResult;    }}